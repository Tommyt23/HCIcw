{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\fleet\\\\HCI\\\\website\\\\src\\\\components\\\\Sidebar\\\\index.js\",\n  _s = $RefreshSig$();\n// import react functions\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Model from 'react-modal';\n\n// import stylesheet\nimport './index.scss';\n\n// import assets\nimport Logo from '../../assets/images/Logo.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => {\n  _s();\n  const [buttonText, setButtonText] = useState('');\n  const [iconSize, setIconSize] = useState('');\n  const [isloggingin, setloggingin] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    function handleResize() {\n      const buttonElement = document.getElementById('login-btn');\n      if (buttonElement.offsetWidth > 100) {\n        setButtonText(' Login');\n      } else {\n        setButtonText('');\n      }\n      if (buttonElement.offsetHeight > 40) {\n        setIconSize('3vh');\n        setButtonText(' Login');\n      } else {\n        setIconSize('20px');\n        setButtonText('');\n      }\n    }\n\n    // Attach event listener for window resize\n    window.addEventListener('resize', handleResize);\n\n    // Call handleResize initially\n    handleResize();\n\n    // no Cleanup function to allow for function to be called whenever in use\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  function loggingin() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav-bar\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"Logo\",\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(Model, {\n        isOpen: true,\n        children: \"model body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"login-btn\",\n        onClick: loggingin,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faUser,\n          color: \"#ddd\",\n          style: {\n            fontSize: iconSize\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), buttonText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Sidebar, \"UuMNMNKHS5gi6v0hmtaxGQtWDME=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","Link","Model","Logo","FontAwesomeIcon","faUser","jsxDEV","_jsxDEV","Sidebar","_s","buttonText","setButtonText","iconSize","setIconSize","isloggingin","setloggingin","loggedIn","setLoggedIn","handleResize","buttonElement","document","getElementById","offsetWidth","offsetHeight","window","addEventListener","loggingin","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","id","onClick","icon","color","style","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/fleet/HCI/website/src/components/Sidebar/index.js"],"sourcesContent":["// import react functions\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Model from 'react-modal';\n\n// import stylesheet\nimport './index.scss';\n\n// import assets\nimport Logo from '../../assets/images/Logo.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\n\nconst Sidebar = () => {\n    const [buttonText, setButtonText] = useState('');\n    const [iconSize, setIconSize] = useState('');\n    const [isloggingin, setloggingin] = useState(false)\n    const [loggedIn, setLoggedIn] = useState(false)\n\n    useEffect(() => {\n        function handleResize() {\n            const buttonElement = document.getElementById('login-btn');\n            if (buttonElement.offsetWidth > 100) {\n                setButtonText(' Login');\n            } else {\n                setButtonText('');\n            }\n            if (buttonElement.offsetHeight > 40){\n                setIconSize('3vh');\n                setButtonText(' Login');\n            } else {\n                setIconSize('20px');\n                setButtonText('');\n            }\n        }\n\n        // Attach event listener for window resize\n        window.addEventListener('resize', handleResize);\n\n        // Call handleResize initially\n        handleResize();\n\n        // no Cleanup function to allow for function to be called whenever in use\n    }, []); // Empty dependency array ensures the effect runs only once on mount\n\n    function loggingin () {\n        \n    }\n\n    return (\n        <div className='nav-bar'>\n            <Link className='Logo' to='/'>\n                <img src={Logo} alt=\"logo\" />\n            </Link>\n            <nav>\n                <Model isOpen={true}>\n                    model body\n                </Model>\n                <button id='login-btn' onClick={loggingin}>\n                    <FontAwesomeIcon icon={faUser} color='#ddd' style={{ fontSize: iconSize }} />\n                    {buttonText}\n                </button>\n            </nav>\n        </div>\n        );\n}\n\nexport default Sidebar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}